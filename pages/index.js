import { useEffect, useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import SendTransaction from '../transaction/SendTransaction'
import styles from '../styles/Home.module.css'
import {
  WalletMultiButton
} from '@solana/wallet-adapter-react-ui';
import { useWallet } from '@solana/wallet-adapter-react'

const DUST_ADDRESS = 'DUSTawucrTsGU8hcqRdHDCbuYhCPADMLM2VcCb8VnFnQ'

export default function Home() {
  const [tokenAmount, setTokenAmount] = useState(1)
  const [recipientPublicKey, setRecipientPublicKey] = useState('')
  const [tokenAddress, setTokenAddress] = useState(DUST_ADDRESS)

  const { publicKey } = useWallet()

  useEffect(() => {
    if (publicKey) {
      setRecipientPublicKey(publicKey)
    }
  }, [publicKey])

  return (
    <div className={styles.container}>
      <Head>
        <title>Solana Send SPL Token</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <WalletMultiButton />
        <SendTransaction>
          {(onSendSPLTransaction) => (
            <div
              className={styles.transactionButton}
              onClick={() => onSendSPLTransaction(recipientPublicKey, tokenAddress, tokenAmount)}
            >
              Send Transaction
            </div>
          )}
        </SendTransaction>
        <div className={styles.options}>
          <span>
            Recipient Public Key:
            <input
              type="text"
              value={recipientPublicKey}
              onChange={(e) => setRecipientPublicKey(e.target.value)}
            />
          </span>
          <span>
            Token Address:
            <input
              type="text"
              value={tokenAddress}
              onChange={(e) => setTokenAddress(e.target.value)}
            />
          </span>
          <span>
            Token Amount
            <input
              type="number"
              value={tokenAmount}
              onChange={(e) => setTokenAmount(parseFloat(e.target.value))}
            />
          </span>
        </div>
      </main>


      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
